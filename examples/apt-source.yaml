# YAML example of an apt config.
apt:
  sources:
    # This is a dictionary (unlike most block/net which are lists)
    # The key is the filename and will be prepended by /etc/apt/sources.list.d/
    # if it doesn't start with a '/'.
    # There are certain cases - where no content is written into a source.list
    # file where the filename will be ignored - yet it can still be used as
    # index for merging.
    # The values inside the entries consost of the following optional entries:
    #   'source': a sources.list entry (some variable replacements apply)
    #   'keyid': providing a key to import via shortid or fingerprint
    #   'key': providing a raw PGP key
    #   'keyserver': specify an alternate keyserver to pull keys from that
    #                were specified by keyid
    #   'filename': for compatibility with the older format (now the key to
    #               this dictionary is the filename). If specified this
    #               overwrites the filename given as key.

    # The new format allows merging between multiple input files than a list
    # like:
    # cloud-config1
    # sources:
    #    s1: {'key': 'key1', 'source': 'source1'}
    # cloud-config2
    # sources:
    #    s2: {'key': 'key2'}
    #    s1: {'filename': 'foo'}
    # This would be merged to
    # sources:
    #    s1:
    #        filename: foo
    #        key: key1
    #        source: source1
    #    s2:
    #        key: key2

    byobu-ppa.list:
      source: "deb http://ppa.launchpad.net/byobu/ppa/ubuntu xenial main"
      keyid: F430BBA5 # GPG key ID published on a key server
    # adding a source.list line, importing a gpg key for a given key id and
    # storing the deb entry in /etc/apt/sources.list.d/byobu-ppa.list

    # PPA shortcut:
    #  * Setup correct apt sources.list line
    #  * Import the signing key from LP
    #
    #  See https://help.launchpad.net/Packaging/PPA for more information
    #  this requires 'add-apt-repository'
    #  due to that the filename key is ignored in this case
    ignored1:
      source: "ppa:smoser/ppa"    # Quote the string

    # additional custom deb source config:
    #  * Creates a file in /etc/apt/sources.list.d/ for the sources list entry
    #  * [optional] Import the apt signing key from the keyserver
    #  * Defaults:
    #    + keyserver: keyserver.ubuntu.com
    #
    #    See sources.list man page for more information about the format
    my-repo1.list:
      source: deb http://archive.ubuntu.com/ubuntu xenial-backports main universe multiverse restricted

    # sources can use $MIRROR and $RELEASE and they will be replaced
    # with the default or specified mirror and the running release.
    # The entry below would be possibly turned into:
    # source: deb http://archive.ubuntu.com/ubuntu xenial multiverse
    # see below at apt*mirror for more
    my-repo2.list:
      source: deb $MIRROR $RELEASE multiverse

    # this would have the same end effect as 'ppa:byobu/ppa'
    my-repo3.list:
      source: "deb http://ppa.launchpad.net/byobu/ppa/ubuntu xenial main"
      keyid: F430BBA5 # GPG key ID published on a key server
      filename: byobu-ppa.list

    # this would only import the key without adding a ppa or other source spec
    # since this doesn't generate a source.list file the filename key is ignored
    ignored2:
      keyid: F430BBA5 # GPG key ID published on a key server

    # In general keyid's can also be specified via their long fingerprints
    # since this doesn't generate a source.list file the filename key is ignored
    ignored3:
      keyid: B59D 5F15 97A5 04B7 E230  6DCA 0620 BBCF 0368 3F77

    # Custom apt repository:
    #  * The apt signing key can also be specified
    #    by providing a pgp public key block
    #  * Providing the PGP key here is the most robust method for
    #    specifying a key, as it removes dependency on a remote key server
    my-repo4.list:
      source: deb http://ppa.launchpad.net/alestic/ppa/ubuntu xenial main
      key: | # The value needs to start with -----BEGIN PGP PUBLIC KEY BLOCK-----
         -----BEGIN PGP PUBLIC KEY BLOCK-----
         Version: SKS 1.0.10

         mI0ESpA3UQEEALdZKVIMq0j6qWAXAyxSlF63SvPVIgxHPb9Nk0DZUixn+akqytxG4zKCONz6
         qLjoBBfHnynyVLfT4ihg9an1PqxRnTO+JKQxl8NgKGz6Pon569GtAOdWNKw15XKinJTDLjnj
         9y96ljJqRcpV9t/WsIcdJPcKFR5voHTEoABE2aEXABEBAAG0GUxhdW5jaHBhZCBQUEEgZm9y
         IEFsZXN0aWOItgQTAQIAIAUCSpA3UQIbAwYLCQgHAwIEFQIIAwQWAgMBAh4BAheAAAoJEA7H
         5Qi+CcVxWZ8D/1MyYvfj3FJPZUm2Yo1zZsQ657vHI9+pPouqflWOayRR9jbiyUFIn0VdQBrP
         t0FwvnOFArUovUWoKAEdqR8hPy3M3APUZjl5K4cMZR/xaMQeQRZ5CHpS4DBKURKAHC0ltS5o
         uBJKQOZm5iltJp15cgyIkBkGe8Mx18VFyVglAZey
         =Y2oI
         -----END PGP PUBLIC KEY BLOCK-----

    # Custom gpg key:
    #  * As with keyid, a key may also be specified without a related source.
    #  * all other facts mentioned above still apply
    # since this doesn't generate a source.list file the filename key is ignored
    ignored4:
      key: | # The value needs to start with -----BEGIN PGP PUBLIC KEY BLOCK-----
         -----BEGIN PGP PUBLIC KEY BLOCK-----
         Version: SKS 1.0.10

         mI0ESpA3UQEEALdZKVIMq0j6qWAXAyxSlF63SvPVIgxHPb9Nk0DZUixn+akqytxG4zKCONz6
         qLjoBBfHnynyVLfT4ihg9an1PqxRnTO+JKQxl8NgKGz6Pon569GtAOdWNKw15XKinJTDLjnj
         9y96ljJqRcpV9t/WsIcdJPcKFR5voHTEoABE2aEXABEBAAG0GUxhdW5jaHBhZCBQUEEgZm9y
         IEFsZXN0aWOItgQTAQIAIAUCSpA3UQIbAwYLCQgHAwIEFQIIAwQWAgMBAh4BAheAAAoJEA7H
         5Qi+CcVxWZ8D/1MyYvfj3FJPZUm2Yo1zZsQ657vHI9+pPouqflWOayRR9jbiyUFIn0VdQBrP
         t0FwvnOFArUovUWoKAEdqR8hPy3M3APUZjl5K4cMZR/xaMQeQRZ5CHpS4DBKURKAHC0ltS5o
         uBJKQOZm5iltJp15cgyIkBkGe8Mx18VFyVglAZey
         =Y2oI
         -----END PGP PUBLIC KEY BLOCK-----
    # end of apt dictionary


  #
  # All of the following are auxillary configurations to the apt handling
  #

  # Preserve existing /etc/apt/sources.list
  # Default: overwrite sources_list with mirror. If this is true
  # then any "mirrors" configuration above will have no effect
  preserve_sources_list: false

  # disable_suites by default it is an empty list, so nothing is removed.
  # If given, those suites are removed from source.list after all other
  # modifications have been made.
  # suites are even disabled if no other modification was made,
  # but not if is preserve_sources_list is active.
  # There is a special alias “$RELEASE” as in the sources that will be replace
  # by the matching release.
  # To ease configuration and improve readability the following common ubuntu
  # suites will be automatically mapped to their full definition.
  # updates   => $RELEASE-updates
  # backports => $RELEASE-backports
  # security  => $RELEASE-security
  # proposed  => $RELEASE-proposed
  # release   => $RELEASE
  # Note: Lines don’t get deleted, but disabled by being converted to a comment.
  # The following example disables all defaults except $RELEASE-security. On top
  # it disables a custom suite called "mysuite"
  disable_suites: [$RELEASE-updates, backports, $RELEASE, mysuite]

  # a custom (e.g. localized) mirror that will be set in sources.list and
  # deb / deb-src lines
  # one can set primary and security mirror to different uri's
  # the child elements to the keys primary and secondary are equivalent
  primary:
    # arches is list of architectures the following config applies to
    # the special keyword "default" applies to any architecture not explicitly
    # listed.
      - arches: [amd64, i386, default]
      # uri is just defining the target as-is
      uri: http://us.archive.ubuntu.com/ubuntu
      #
      # via search one can define lists that are
      # tried one by one. The first with a working DNS resolution (or if it is an
      # IP) will be picked. That way one can keep one configuration for multiple
      # subenvironments that select the working one.
      search:
        - http://cool.but-sometimes-unreachable.com/ubuntu
        - http://us.archive.ubuntu.com/ubuntu
      #
      # This will search for <distro>-mirror locally and at the fqdn of the system.
      # If resolving that will be used as archive. That allows configuring local
      # mirrors via providing certin DNS names via a local nameserver.
      # These can even be set to resolve to the public names of defaults like
      # archive.ubuntu.com as long as they are reachable from the target.
      # For security it will search <distro>-security-mirror
      search_dns: True
      #
      # If multiple of a category are given
      #   1. uri
      #   2. search
      #   3. search_dns
      # are given the first defining a valid mirror wins (in the
      # order as defined here, not the one it is listed in the config).
    - arches: [s390x, arm64]
      # as above, allowing to have one config for different per arch mirrors
  # security is optional, if not defined it is set to the value of primary
  security:
    uri: http://security.ubuntu.com/ubuntu
    [...]
  #
  # if no mirrors are specified at all, or all lookups fail it will use:
  # primary: http://archive.ubuntu.com/ubuntu
  # security: http://security.ubuntu.com/ubuntu

  # Provide a custom template for rendering sources.list
  # without one provided curtin will try to modify the sources.list it find
  # in the target at /etc/apt/.
  # Within these source.list templates you can use the following replacement
  # variables (all have sane ubuntu defaults, see above for details):
  # $RELEASE, $MIRROR, $PRIMARY, $SECURITY
  sources_list: | # written by curtin custom template
    deb $MIRROR $RELEASE main restricted
    deb-src $MIRROR $RELEASE main restricted
    deb $PRIMARY $RELEASE universe restricted
    deb $SECURITY $RELEASE-security multiverse

  # any apt config string that will be made available to apt
  # see the APT.CONF(5) man page for details what can be specified
  conf: | # APT config
    APT {
      Get {
        Assume-Yes "true";
        Fix-Broken "true";
      };
    };

  # proxies are the most common conf option that is set there is a
  # shortcut via apt*proxy. Those get automatically translated into the
  # correct Acquire::*::Proxy statements.
  proxy: http://[[user][:pass]@]host[:port]/
  http_proxy: http://[[user][:pass]@]host[:port]/
  ftp_proxy: ftp://[[user][:pass]@]host[:port]/
  https_proxy: https://[[user][:pass]@]host[:port]/
  # note: proxy actually being a short synonym to http_proxy

  # 'source' entries in apt-sources that match this python regex
  # expression will be passed to add-apt-repository
  # The following example is also the builtin default if nothing is specified
  add_apt_repo_match: '^[\w-]+:\w'
