# LP: #1731709
# during install use write_files to write out a python program
# that calls curtin.curthooks.write_files and feeds it yaml 
# config to simulate older maas images which may have called
# curthooks.write_files(cfg, target) pattern.
write_files:
    test_curthooks_input:
      path: /tmp/writefiles.yaml
      content: |
        # this is my input yaml file
        write_files:
          testfile1:
            path: /root/testfile1
            content: "This is testfile1\n"
    test_curthooks:
      path: /tmp/test_curthooks.py
      permissions: '0755'
      content: |
        #!/usr/bin/python3
        import sys, yaml, os
        from curtin.commands import curthooks
        target_path = os.environ['TARGET_MOUNT_POINT']
        print('Found TARGET_MOUNT_POINT=%s' % target_path)
        ypath = target_path + '/tmp/writefiles.yaml'
        cfg = yaml.load(open(ypath))
        curthooks.write_files(cfg, target_path)
        print('Wrote %s to %s' % (cfg, target_path))


# call python3 in ephemeral to import curtin code use files written to target
run_curthooks:
  - &call_python3 |
    echo $@
    TP=${TARGET_MOUNT_POINT};
    FILE=${TP}${1};
    echo "running $FILE";
    exec python3 $FILE

late_commands:
  01_runcurthooks: [sh, -c, *call_python3, 'curthook', '/tmp/test_curthooks.py']
